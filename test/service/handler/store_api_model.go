//
// Swagger Petstore
// 
// This is a sample Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). 
// 
// API version: 1.0.0
// Contact: apiteam@swagger.io
//
// Code generated by OpenAPI Generator (https://http://github.com/openAPITools/openapi-generator)

// Package test contains all API models and handlers
package test

import (
  "net/http"
  "encoding/json"
  "github.com/phogolabs/rest"
)

// DeleteOrderInputParam contains the parameters for the DeleteOrder operation
type DeleteOrderInputParam struct {
  // OrderID param: ID of the order that needs to be deleted
  OrderID int64 `json:"-" xml:"-" path:"orderId" validate:"required"`
}

// Bind manages request partameters
func (p *DeleteOrderInputParam) Bind(r *http.Request) (err error) {
  if err = rest.DecodePath(r, p); err != nil {
    return err
  }

  return nil
}

// DeleteOrderInput is the input for the DeleteOrder operation
type DeleteOrderInput struct {
  // Param contains the parameters for the DeleteOrder operation
  Param DeleteOrderInputParam `json:"-"`
}

// Bind manages request input
func (p *DeleteOrderInput) Bind(r *http.Request) (err error) {
  err = p.Param.Bind(r)
  return
}

// GetInventoryOutput is the output for the GetInventory operation
type GetInventoryOutput struct {
  // Body payload
  Body map `json:"-"`
}

// Render manages response payloads.
func (p *GetInventoryOutput) Render(w http.ResponseWriter, r *http.Request) (err error) {
  w.WriteHeader(200)
  return
}

// MarshalJSON marshals the body as JSON
func (p *GetInventoryOutput) MarshalJSON() ([]byte, error) {
  return json.Marshal(&p.Body);
}

// GetOrderByIDInputParam contains the parameters for the GetOrderByID operation
type GetOrderByIDInputParam struct {
  // OrderID param: ID of pet that needs to be fetched
  OrderID int64 `json:"-" xml:"-" path:"orderId" validate:"required"`
}

// Bind manages request partameters
func (p *GetOrderByIDInputParam) Bind(r *http.Request) (err error) {
  if err = rest.DecodePath(r, p); err != nil {
    return err
  }

  return nil
}

// GetOrderByIDInput is the input for the GetOrderByID operation
type GetOrderByIDInput struct {
  // Param contains the parameters for the GetOrderByID operation
  Param GetOrderByIDInputParam `json:"-"`
}

// Bind manages request input
func (p *GetOrderByIDInput) Bind(r *http.Request) (err error) {
  err = p.Param.Bind(r)
  return
}

// GetOrderByIDOutput is the output for the GetOrderByID operation
type GetOrderByIDOutput struct {
  // Body payload
  Body Order `json:"-"`
}

// Render manages response payloads.
func (p *GetOrderByIDOutput) Render(w http.ResponseWriter, r *http.Request) (err error) {
  w.WriteHeader(200)
  return
}

// MarshalJSON marshals the body as JSON
func (p *GetOrderByIDOutput) MarshalJSON() ([]byte, error) {
  return json.Marshal(&p.Body);
}

// PlaceOrderInput is the input for the PlaceOrder operation
type PlaceOrderInput struct {
  // Body payload: order placed for purchasing the pet
  Body Order `json:"-" xml:"-" validate:"required"`
}

// Bind manages request input
func (p *PlaceOrderInput) Bind(r *http.Request) (err error) {
  return
}

// UnmarshalJSON unmarshals the body from JSON
func (p *PlaceOrderInput) UnmarshalJSON(data []byte) error {
  return json.Unmarshal(data, &p.Body);
}

// PlaceOrderOutput is the output for the PlaceOrder operation
type PlaceOrderOutput struct {
  // Body payload
  Body Order `json:"-"`
}

// Render manages response payloads.
func (p *PlaceOrderOutput) Render(w http.ResponseWriter, r *http.Request) (err error) {
  w.WriteHeader(200)
  return
}

// MarshalJSON marshals the body as JSON
func (p *PlaceOrderOutput) MarshalJSON() ([]byte, error) {
  return json.Marshal(&p.Body);
}
